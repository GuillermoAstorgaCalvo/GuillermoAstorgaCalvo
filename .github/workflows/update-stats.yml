name: Update Statistics

on:
  workflow_dispatch:
  schedule:
    - cron: "0 3 * * 1"

jobs:
  load-config:
    runs-on: ubuntu-latest
    outputs:
      repositories: ${{ steps.config.outputs.repositories }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install PyYAML
        run: pip install PyYAML

      - name: Load configuration matrix
        id: config
        run: |
          python3 << 'EOF'
          import yaml
          import json
          import os

          with open('config.yml', 'r') as f:
              config = yaml.safe_load(f)

          repositories = config.get('repositories', [])
          matrix_json = json.dumps(repositories)

          print(f"repositories={matrix_json}")
          with open(os.environ['GITHUB_OUTPUT'], 'a') as f:
              f.write(f"repositories={matrix_json}\n")
          EOF

  process-repositories:
    needs: load-config
    runs-on: ubuntu-latest
    strategy:
      matrix:
        repository: ${{ fromJson(needs.load-config.outputs.repositories) }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-git-fame-pyyaml-v1
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip install git-fame PyYAML

      - name: Install cloc
        run: |
          sudo apt-get update
          sudo apt-get install -y cloc

      - name: Clone repository
        env:
          PERSONAL_TOKEN: ${{ secrets.PERSONAL_REPOS_TOKEN }}
          PRIVATE_TOKEN: ${{ secrets.PRIVATE_REPO_TOKEN }}
          REPO_NAME: ${{ matrix.repository.name }}
          BRANCH_NAME: ${{ matrix.repository.branch }}
        run: |
          set -e
          # Determine the organization and token based on repository name
          if [[ "${REPO_NAME}" == "FacturaIA" || "${REPO_NAME}" == "restaurant-app" ]]; then
            ORG="GuillermoAstorgaCalvo"
            TOKEN="${PERSONAL_TOKEN}"
          else
            ORG="guillermo-affiliaction"
            TOKEN="${PRIVATE_TOKEN}"
          fi

          git clone --branch "${BRANCH_NAME}" --single-branch \
            "https://x-access-token:${TOKEN}@github.com/${ORG}/${REPO_NAME}.git" \
            repo

      - name: Process repository statistics
        env:
          REPO_NAME: ${{ matrix.repository.name }}
          DISPLAY_NAME: ${{ matrix.repository.display_name }}
        run: |
          cd scripts
          python3 process_repo_stats.py

      - name: Upload repository statistics
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.repository.artifact_name }}
          path: scripts/repo_stats.json
          retention-days: 1

  aggregate-and-commit:
    needs: process-repositories
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: read

    steps:
      - name: Checkout public profile
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 1

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip install PyYAML

      - name: Download all repository statistics
        uses: actions/download-artifact@v4
        with:
          path: repo-stats

      - name: Generate unified statistics
        run: |
          cd scripts
          python3 aggregate_stats.py

      - name: Save analytics history
        run: |
          if [[ -f "scripts/analytics_history.json" ]]; then
            cp scripts/analytics_history.json ./analytics_history.json
          fi

      - name: Move generated data to root
        run: |
          mv scripts/unified_stats.json ./ 2>/dev/null || true

      - name: Restore analytics history
        run: |
          if [[ -f "analytics_history.json" ]]; then
            cp analytics_history.json scripts/analytics_history.json
          fi

      - name: Generate enhanced dynamic README
        run: |
          cd scripts
          python3 enhanced_readme_generator.py

      - name: Validate README generation
        run: |
          if [[ ! -f "README.md" ]]; then
            echo "‚ùå Error: README.md was not generated"
            exit 1
          fi

          if [[ ! -s "README.md" ]]; then
            echo "‚ùå Error: README.md is empty"
            exit 1
          fi

          echo "‚úÖ README.md generated successfully with private repository statistics"

      - name: Generate language ranking SVG
        run: |
          cd scripts
          python3 generate_language_svg.py
          mv ../language_ranking.svg ../language_ranking.svg || true

      - name: Commit results to profile
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [[ -z "$(git status --porcelain)" ]]; then
            exit 0
          fi

          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"

          git add unified_stats.json analytics_history.json README.md language_ranking.svg

          git commit -m "üìä Update README and language ranking SVG - $(date '+%Y-%m-%d %H:%M UTC')"

          git push
